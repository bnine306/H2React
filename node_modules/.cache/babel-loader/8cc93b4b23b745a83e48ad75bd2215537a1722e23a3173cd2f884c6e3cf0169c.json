{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[users,setUsers]=useState([]);// 사용자 정보를 저장할 상태\nconst[loading,setLoading]=useState(true);// 로딩 상태 관리\nuseEffect(()=>{// Spring Boot API에서 사용자 목록을 가져옵니다.\nfetch('http://115.68.179.98/api/users')// 수정된 API URL\n.then(response=>response.json())// JSON 응답을 파싱\n.then(data=>{setUsers(data);// 데이터 상태 업데이트\nsetLoading(false);// 로딩 완료\n}).catch(error=>{console.error('Error:',error);setLoading(false);});},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"User List\"}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}):/*#__PURE__*/_jsx(\"ul\",{children:users.map(user=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Name: \",user.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Email: \",user.email]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Created At: \",new Date(user.createAt).toLocaleString()]}),\" \",/*#__PURE__*/_jsx(\"hr\",{})]},user.id))})]})});}export default App;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","App","users","setUsers","loading","setLoading","fetch","then","response","json","data","catch","error","console","className","children","map","user","name","email","Date","createAt","toLocaleString","id"],"sources":["C:/Users/USER/Desktop/stapp(로컬 리액트H2)/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [users, setUsers] = useState([]);  // 사용자 정보를 저장할 상태\n  const [loading, setLoading] = useState(true);  // 로딩 상태 관리\n\n  useEffect(() => {\n    // Spring Boot API에서 사용자 목록을 가져옵니다.\n    fetch('http://115.68.179.98/api/users')  // 수정된 API URL\n      .then((response) => response.json())  // JSON 응답을 파싱\n      .then((data) => {\n        setUsers(data);  // 데이터 상태 업데이트\n        setLoading(false);  // 로딩 완료\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>User List</h1>\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          <ul>\n            {users.map((user) => (\n              <li key={user.id}>\n                <p>Name: {user.name}</p>\n                <p>Email: {user.email}</p>\n                <p>Created At: {new Date(user.createAt).toLocaleString()}</p> {/* Date 객체로 변환하여 표시 */}\n                <hr />\n              </li>\n            ))}\n          </ul>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAAG;AACzC,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAAG;AAE/CD,SAAS,CAAC,IAAM,CACd;AACAW,KAAK,CAAC,gCAAgC,CAAG;AAAA,CACtCC,IAAI,CAAEC,QAAQ,EAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAG;AAAA,CACrCF,IAAI,CAAEG,IAAI,EAAK,CACdP,QAAQ,CAACO,IAAI,CAAC,CAAG;AACjBL,UAAU,CAAC,KAAK,CAAC,CAAG;AACtB,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,EAAK,CAChBC,OAAO,CAACD,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAC9BP,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEP,IAAA,QAAKgB,SAAS,CAAC,KAAK,CAAAC,QAAA,cAClBf,KAAA,WAAQc,SAAS,CAAC,YAAY,CAAAC,QAAA,eAC5BjB,IAAA,OAAAiB,QAAA,CAAI,WAAS,CAAI,CAAC,CACjBX,OAAO,cACNN,IAAA,MAAAiB,QAAA,CAAG,YAAU,CAAG,CAAC,cAEjBjB,IAAA,OAAAiB,QAAA,CACGb,KAAK,CAACc,GAAG,CAAEC,IAAI,eACdjB,KAAA,OAAAe,QAAA,eACEf,KAAA,MAAAe,QAAA,EAAG,QAAM,CAACE,IAAI,CAACC,IAAI,EAAI,CAAC,cACxBlB,KAAA,MAAAe,QAAA,EAAG,SAAO,CAACE,IAAI,CAACE,KAAK,EAAI,CAAC,cAC1BnB,KAAA,MAAAe,QAAA,EAAG,cAAY,CAAC,GAAI,CAAAK,IAAI,CAACH,IAAI,CAACI,QAAQ,CAAC,CAACC,cAAc,CAAC,CAAC,EAAI,CAAC,IAAC,cAC9DxB,IAAA,QAAK,CAAC,GAJCmB,IAAI,CAACM,EAKV,CACL,CAAC,CACA,CACL,EACK,CAAC,CACN,CAAC,CAEV,CAEA,cAAe,CAAAtB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}